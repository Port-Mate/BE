name: GCP Artifact Registry 자동 배포

on:
  push:
    branches:
      - test

env:
  REGION: us-central1
  IMAGE_NAME: portmate-server
  IMAGE_TAG: ${{ github.sha }}
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  REPO_NAME: ${{ secrets.ARTIFACT_REPO }}

jobs:
  CI:
    runs-on: ubuntu-latest

    steps:
      - name: 코드 체크아웃
        uses: actions/checkout@v4

      - name: JDK 설정
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: JAR 빌드
        run: ./gradlew clean bootJar -x test

      - name: JAR 파일 확인
        run: |
          echo "JAR 파일 존재 여부 확인 중..."
          ls -la build/libs/
          if [ ! -f build/libs/PortMate-0.0.1-SNAPSHOT.jar ]; then
            echo "JAR 파일을 찾을 수 없습니다."
            exit 1
          fi
          echo "✅ JAR 파일 확인 완료"

      - name: GCP 인증
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Docker 인증 구성
        run: gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev --quiet

      - name: Docker 이미지 빌드 및 푸시
        run: |
          IMAGE="${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO_NAME }}/${{ env.IMAGE_NAME }}:latest"
          echo "이미지 빌드 중: $IMAGE"
          docker build -t $IMAGE .
          docker push $IMAGE
          echo "✅ Artifact Registry로 이미지 푸시 완료"

  CD:
    runs-on: ubuntu-latest
    needs: CI

    steps:
      - name: 서버에 SSH 접속하여 Docker Compose 실행
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.VM_IP }}
          username: ${{ secrets.VM_USER }}
          key: ${{ secrets.VM_SSH_KEY }}
          script: |
            REGION=us-central1
            IMAGE_NAME=portmate-server
            PROJECT_ID=${{ secrets.GCP_PROJECT_ID }}
            REPO_NAME=${{ secrets.ARTIFACT_REPO }}

            echo "==== GCP Artifact Registry 로그인 ===="
            echo '${{ secrets.GCP_SA_KEY }}' > gcp_sa_key.json
            cat gcp_sa_key.json | sudo docker login -u _json_key --password-stdin https://$REGION-docker.pkg.dev
            rm -f gcp_sa_key.json

            cd /home/${{ secrets.VM_USER }}/portmate

            echo "==== 최신 이미지 Pull ===="
            sudo docker compose pull

            echo "==== 컨테이너 중지 ===="
            sudo docker compose down

            echo "==== 환경변수 주입 후 재실행 ===="
            sudo env \
              FIREBASE_JSON='${{ secrets.FIREBASE_JSON }}' \
              DATABASE_PASSWORD='${{ secrets.DATABASE_PASSWORD }}' \
              PROJECT_ID='${{ secrets.GCP_PROJECT_ID }}' \
              REPO_NAME='${{ secrets.ARTIFACT_REPO }}' \
              docker compose up -d

            echo "✅ 배포 완료"
